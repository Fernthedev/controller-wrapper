plugins {
    id 'java'
    id "io.freefair.lombok" version "4.1.0"
}
apply plugin: 'maven'
apply plugin: 'maven-publish'

group 'com.github.Fernthedev'
version '1.0.2'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

compileJava.options.encoding = 'UTF-8'

import org.gradle.internal.os.OperatingSystem

project.ext.lwjglVersion = "3.2.3"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = "natives-windows"
        break
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.13'
    implementation("com.squareup.okio:okio:2.4.3")
    implementation 'com.google.code.gson:gson:2.8.5'

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.java
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

build.dependsOn sourcesJar

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = this.group;
            artifactId = this.archivesBaseName
            version = this.version

            artifact sourcesJar {
                classifier "sources"
            }
            
            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}
